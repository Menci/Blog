diff --git a/node_modules/hexo/lib/hexo/index.js b/node_modules/hexo/lib/hexo/index.js
index 30a1f78..b90704a 100644
--- a/node_modules/hexo/lib/hexo/index.js
+++ b/node_modules/hexo/lib/hexo/index.js
@@ -26,6 +26,8 @@ const multiConfigPath = require('./multi_config_path');
 const { deepMerge, full_url_for } = require('hexo-util');
 let resolveSync; // = require('resolve');
 
+require("@swc-node/register");
+
 const libDir = dirname(__dirname);
 const dbVersion = 1;
 
@@ -97,6 +99,8 @@ class Hexo extends EventEmitter {
   constructor(base = process.cwd(), args = {}) {
     super();
 
+    global.hexo = this;
+
     this.base_dir = base + sep;
     this.public_dir = join(base, 'public') + sep;
     this.source_dir = join(base, 'source') + sep;
@@ -282,28 +286,7 @@ class Hexo extends EventEmitter {
   }
 
   loadPlugin(path, callback) {
-    return readFile(path).then(script => {
-      // Based on: https://github.com/joyent/node/blob/v0.10.33/src/node.js#L516
-      const module = new Module(path);
-      module.filename = path;
-      module.paths = Module._nodeModulePaths(path);
-
-      function req(path) {
-        return module.require(path);
-      }
-
-      req.resolve = request => Module._resolveFilename(request, module);
-
-      req.main = require.main;
-      req.extensions = Module._extensions;
-      req.cache = Module._cache;
-
-      script = `(function(exports, require, module, __filename, __dirname, hexo){${script}\n});`;
-
-      const fn = runInThisContext(script, path);
-
-      return fn(module.exports, req, module, path, dirname(path), this);
-    }).asCallback(callback);
+    return Promise.resolve(require(path)).asCallback(callback);
   }
 
   _showDrafts() {
diff --git a/node_modules/hexo/lib/theme/view.js b/node_modules/hexo/lib/theme/view.js
index 6c0439b..13ba068 100644
--- a/node_modules/hexo/lib/theme/view.js
+++ b/node_modules/hexo/lib/theme/view.js
@@ -76,7 +76,9 @@ class View {
     // eslint-disable-next-line no-unused-vars
     const { layout, _content, ...data } = this.data;
     return assignIn({}, locals, data, {
-      filename: this.source
+      filename: this.source,
+      require,
+      hexo: this._theme.context
     });
   }
 
